<?xml version="1.0" encoding="utf-8"?>
<config>
	<remove xpath="/utility_ai/ai_packages"/>
	<!-- Remove TFP broken UAI xml  -->
	<append xpath="/utility_ai">
		<!-- The complete documentation for these actions and considerations are included in the UtilityAI.xml file found in the 0_SphereiiCore mod or prefixed to this file in the ConfigsDump UtilityAI.xml file -->
		<!-- UAI packages are delared in entityclasses.xml using, for example <property name="AIPackages" value="Human Basic, Human Melee Basic, Human Heal Basic"/>   If you have this property, it will override any EAI tasks and target properties on that entity. -->
		<!-- Note:  Place considerations that are most likely to fail before ones likely to be true, speeds up the AI calculations  -->
		<!-- Note:  Animal NPCs can use human UAI packages, but not extensively tested and probably should have their own packages  -->
		<!-- Dont use multiple versions of the same type of packages, like dont add the Human basic and the Human Timid basic on one character  -->
		
		<!-- Target filters (IsEnemy, IsSelf, IsPlayer, IsLeader, IsAlly )can be used on packages or on tasks.  These provide reduced context for considerations, improving efficency  -->
		
		<!-- NPCBasic is the default movement package for NPCs.  If all else fails, character should wander, otherwise follow or flee if wounded  -->
		
		<!-- flip_y inverts the output of a calculation, flip_x inverts the input.  Use flip_y on linear (default) curves but use flip_x on threshold curves  -->
		
		<!--		<ai_packages max_entities="30" max_waypoints="10"> --> <!-- Untested future expansion  -->
		<ai_packages max_entities="30">
			<ai_package name="NPCBasic" >
				<action name="Wander" weight="1" entity_filter="IsSelf"><!-- Lowest weight, so wander doesnt win against any other action, yet will score true so the NPC does something if not busy in dialog. -->
					<task class="WanderSDX, SCore"/>
					<task class="IdleSDX, SCore" OnStartAddBuffs="RandomWanderIdle" OnStopRemoveBuffs="RandomWanderIdle" timeout="50" /><!-- fires an Idle buff on start, removes same on exit  -->
					<consideration class="HasOrder, SCore" order="None, Wander"/> <!-- blocks the action when it has an order not listed  -->
					<consideration class="EnemyNotNear, SCore" /> <!-- Blocks wandering if enemies are near, Distance can be specified  -->
	 				<consideration class="IsNotBusy, SCore"/>   <!-- If doing an activity, don't just walkaway, do that animation -->
				</action>
				<action name="OnReload" weight="2" >
                    <task class="IdleSDX, SCore"  /> 
                    <consideration class="SelfHasBuff, SCore" buffs="buffReload2,buffReloadDelay,buffReloadDelay2"/> <!-- Outscores Wander when buff is active  -->
					<consideration class="EnemyNotNear, SCore" />
                </action>  
				<action name="Chat" weight="2" entity_filter="IsPlayer">
                    <task class="IdleSDX, SCore" OnStartAddBuffs="RandomIdle" OnStopRemoveBuffs="RandomIdle" /> 
                        <consideration class="EnemyNotNear, SCore"/><!-- True if no enemies are near, so safe to chat  -->
                        <consideration class="TargetDistance" flip_x="true" min="1" max="3" curve="threshold" /><!-- Forces a fixed true range between 1 and 3 blocks -->
                 </action> 
				<action name="Stay" weight="2" >
					<task class="IdleSDX, SCore"  /> 
					<consideration class="EnemyNotNear, SCore"/>
					<consideration class="HasOrder, SCore" order="Stay"/>
				</action>  
				<action name="HealSelf" weight="6" entity_filter="IsSelf">
					<task class="HealSDX, SCore" OnStartAddBuffs="IsHealing" OnStopAddBuffs="buffProcessConsumables"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="SelfHealthSDX, SCore" min="0.01" max="0.60"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/> 
				</action>
				<action name="MendLegSelf" weight="5" entity_filter="IsSelf">
					<task class="HealSDX, SCore" run="true" OnStartAddBuffs="IsHealing" OnStopAddBuffs="buffLegSplinted"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="SelfHasBuff, SCore" buffs="buffLegBroken,buffLegSprained"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>	
				<action name="MendArmSelf" weight="5" entity_filter="IsSelf">
					<task class="HealSDX, SCore" OnStartAddBuffs="IsHealing" OnStopAddBuffs="buffArmSplinted"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="SelfHasBuff, SCore" buffs="buffArmSprained,buffArmBroken"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>
				<!--<action name="Retreat" weight="6" entity_filter="IsSelf">
                    <task class="BackupFromTargetSDX, SCore" max_distance="20"/>
                    <consideration class="SelfHealthSDX, SCore" min=".05" max=".80"/>
					<consideration class="TargetIsEnemy, SCore"/>
                </action>-->
				<action name="Flee" weight="6">
					<task class="FleeFromTarget" max_distance="30"/>
					<consideration class="SelfHasCVar, SCore" cvar="Timid" value="1"/>
					<consideration class="TargetIsEnemy, SCore"/>
					<consideration class="TargetDistance" flip_y="true" min="0" max="15"/>
					<consideration class="SelfVisible"/>
				</action>				
			</ai_package>	
		
			<ai_package name="NPCHired" entity_filter="IsLeader" >
				<action name="TooClose" weight="3">
					<task class="BackupFromTargetSDX, SCore" max_distance="4"/>
					<consideration class="EnemyNotNear, SCore" />
					<consideration class="TargetDistance" flip_y="true" min="0" max="1"  />
					<consideration class="NotHasOrder, SCore" order="Stay"/>
				</action> 
				<action name="LeaderFollow" weight="2" >
					<task class="FollowSDX, SCore" OnStartAddBuffs="NPCpegasus" OnStopRemoveBuffs="NPCpegasus"/>
					<consideration class="HasOrder, SCore" order="Follow"/>
					<consideration class="EnemyNotNear, SCore"/>
					<consideration class="TargetDistance" flip_x="true" min="10" max="50" curve="threshold" />
				</action>
				<action name="LeaderFollowSlow" weight="2" >
					<task class="FollowSDX, SCore"/>
					<consideration class="HasOrder, SCore" order="Follow"/>
					<consideration class="EnemyNotNear, SCore"/>
					<consideration class="TargetDistance" flip_x="true" min="4" max="10" curve="threshold"/>
				</action> 			
			</ai_package>
			
			<ai_package name="NPCMedic" entity_filter="IsAlly" > 
				<action name="HealOther" weight="5">
					<task class="HealSDX, SCore" run="true" OnStartAddBuffs="IsHealing" OnStopAddBuffsTarget="buffProcessConsumables"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="TargetNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="TargetHealthSDX, SCore" min="0.01" max="0.50"/>
					<consideration class="TargetDistance"  flip_y="true" min="2" max="4"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/> 
				</action>
				<action name="MendLegOther" weight="5">
					<task class="HealSDX, SCore" run="true" OnStartAddBuffs="IsHealing" OnStopAddBuffsTarget="buffLegSplinted"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="TargetNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="TargetHasBuff, SCore" buffs="buffLegBroken,buffLegSprained"/>
					<consideration class="TargetDistance"  flip_y="true" min="2" max="4"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>			
				<action name="MendArmOther" weight="5">
					<task class="HealSDX, SCore" run="true" OnStartAddBuffs="IsHealing" OnStopAddBuffsTarget="buffArmSplinted"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="TargetNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="TargetHasBuff, SCore" buffs="buffArmSprained,buffArmBroken"/>
					<consideration class="TargetDistance"  flip_y="true" min="2" max="4"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>
				<!-- Action to move the NPC close to the ally who needs help -->
				<action name="MoveToHeal" weight="6">
					<task class="MoveToTargetSDX, SCore" run="true" />
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="TargetNotHasBuff, SCore" buffs="buffHealHealth,buffProcessConsumables"/>
					<consideration class="TargetHealthSDX, SCore" min="0.01" max="0.50"/>
					<consideration class="TargetDistance" min="3"/>
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>
				<!-- Action to move the NPC close to the ally who needs help, specifically for sprained limbs. -->
				<!-- The above only moves them if their heal is low, whereas this is necessary for a broken limb, which may not trigger the health check -->
				<action name="MoveToMend" weight="6">
					<task class="MoveToTargetSDX, SCore" run="true" />
					<consideration class="SelfNotHasBuff, SCore" buffs="IsHealing"/>
					<consideration class="TargetHasBuff, SCore" buffs="buffArmSprained,buffArmBroken,buffLegBroken,buffLegSprained"/>
					<consideration class="TargetDistance" min="3" />
					<consideration class="EnemyNotNear, SCore" distance="10"/>
				</action>
			</ai_package>
			
			<ai_package name="NPCMelee" entity_filter="IsEnemy"> <!-- faction check  -->
				<action name="MoveToEnemyRunMelee" weight="3">
					<task class="MoveToTargetSDX, SCore" run="true" /> 
					<consideration class="NotHasOrder, SCore" order="Stay"/>
					<consideration class="NotInWeaponRange, SCore" />
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>	
				</action>
				<action name="MeleeAttackEntity" weight="5">
					<task class="AttackTargetEntitySDX, SCore" action_index="0"/>
					<consideration class="InWeaponRange, SCore" action_index="0"/>
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>	
				</action>
			</ai_package>	
	
			<ai_package name="NPCRanged" entity_filter="IsEnemy" >
				<action name="MoveToEnemyRanged" weight="3">
					 <task class="MoveToAttackTargetSDX, SCore" run="false" action_index="1" />
					<consideration class="FailOnDistanceToLeader, Score" max_distance="20"/>
					<consideration class="NotInWeaponRange, SCore" action_index="1" />
					<consideration class="NotHasOrder, SCore" order="Stay"/>
					<consideration class="CanSeeTarget, SCore"/>
				</action>
				<action name="BackupRanged" weight="4"><!-- this might stop NPCs 1/2 way up ladders, needs more testing  -->
					<task class="BackupFromTargetSDX, SCore" run="true" max_distance="10"/>
					<consideration class="FailOnDistanceToLeader, Score" max_distance="30"/>
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="InWeaponRange, SCore" action_index="1" />
					<consideration class="NotHasOrder, SCore" order="Stay"/>
				</action>
				<action name="RangedAttack" weight="5">
                    <task class="AttackTargetEntitySDX, SCore" action_index="1"/>
                    <consideration class="FailOnDistanceToLeader, Score" max_distance="20"/>
                    <consideration class="CanSeeTarget, SCore"/>
                    <consideration class="InWeaponRange, SCore"  action_index="1"  />
                    <!-- Dont fire point blank, use melee instead  -->
                    <consideration class="SelfNotHasBuff, SCore" buffs="buffReload2,buffReloadDelay,buffReloadDelay2,buffHitDelay,buffHitStun,RandomIdle,RandomWanderIdle"/>
				</action>
				<action name="MeleeRangedAttackEntity" weight="6">
					<task class="AttackTargetEntitySDX, SCore" action_index="0"/>
					<consideration class="InWeaponRange, SCore"  action_index="0"  /> 
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>	
					<!--<consideration class="TargetDistance" flip_x="true" min="0" max="2" curve="threshold" /> -->
					<!--<consideration class="TargetNotHasCVar, SCore" cvar="_stunned" value="1"/> --> <!-- working?  -->
				</action>
			</ai_package>	
			
			<ai_package name="NPCLauncher" entity_filter="IsEnemy" >
				<action name="MoveToEnemyRanged" weight="3">
					<task class="MoveToAttackTargetSDX, SCore" run="false" action_index="1" />
					<consideration class="FailOnDistanceToLeader, Score" max_distance="30"/>
					<consideration class="NotInWeaponRange, SCore" action_index="1" />
					<consideration class="NotHasOrder, SCore" order="Stay"/>
					<consideration class="CanSeeTarget, SCore"/>
				</action>
				<action name="BackupRanged" weight="4"> <!-- this might stop NPCs 1/2 way up ladders, needs more testing  -->
					<task class="BackupFromTargetSDX, SCore" max_distance="15"/>
					<consideration class="FailOnDistanceToLeader, Score" max_distance="30"/>
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="NotHasOrder, SCore" order="Stay"/>
					<consideration class="TargetDistance" flip_y="true" min="2" max="30"/>
				</action>
				<action name="RangedAttack" weight="5">
					<task class="AttackTargetEntitySDX, SCore" action_index="1"/>
					<consideration class="FailOnDistanceToLeader, Score" max_distance="30"/>
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="InWeaponRange, SCore"  action_index="1"  />
					<consideration class="TargetDistance" flip_y="true" min="10" /> <!-- dont self destruct  -->
					<consideration class="SelfNotHasBuff, SCore" buffs="buffReload2,buffReloadDelay,buffReloadDelay2,RandomIdle,buffHitDelay,buffHitStun"/>
				</action>
				<action name="MeleeRangedAttackEntity" weight="6">
					<task class="AttackTargetEntitySDX, SCore" action_index="0"/>
					<consideration class="InWeaponRange, SCore"  action_index="0"  />
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>			
				</action>
			</ai_package>			
			
			<!--   Bandit Packages  -->
			
			<ai_package name="BanditMelee" entity_filter="IsEnemy"> 
				<action name="MoveToEnemyRunMelee" weight="3">
                    <task class="MoveToAttackTargetSDX, SCore" run="true" />
                    <consideration class="CanSeeTarget, SCore"/>
					 <consideration class="NotInWeaponRange, SCore" />
                    <consideration class="FailOnDistanceToLeader, SCore" max_distance="30"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitStun"/>	
                </action>
                 <action name="MoveToRandomTarget" weight="3">
                    <task class="MoveToInvestigate, SCore" run="true" />
                    <consideration class="FailOnDistanceToLeader, SCore" max_distance="30"/>
                    <consideration class="TargetDistance" flip_y="true"  max="30"/>
                    <consideration class="NotInWeaponRange, SCore" />
                    <consideration class="CanNotSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitStun"/>	
                </action>
				<action name="MeleeAttackEntity" weight="5">
					<task class="AttackTargetEntitySDX, SCore" action_index="0"/>
					<consideration class="InWeaponRange, SCore" />
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>					
				</action>
			</ai_package>	
			
			<ai_package name="BanditRanged" entity_filter="IsEnemy" >
				<action name="MoveToEnemyRanged" weight="3">
					<task class="MoveToAttackTargetSDX, SCore" run="false" action_index="1" />
					<consideration class="NotInWeaponRange, SCore" action_index="1" /> 
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitStun"/>	
				</action>
                 <action name="MoveToRandomTarget" weight="3">
                    <task class="MoveToInvestigate, SCore" run="true" />
                    <consideration class="TargetDistance" flip_y="true"  max="30"/>
                    <consideration class="CanNotSeeTarget, SCore"/>
                </action>				
				<action name="RangedAttack" weight="5">
					<task class="AttackTargetEntitySDX, SCore" action_index="1"/>
					<consideration class="InWeaponRange, SCore"  action_index="1"  />
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffReload2,buffReloadDelay,buffReloadDelay2,buffHitStun"/>
					<consideration class="CanSeeTarget, SCore"/>
				</action>
				<action name="MeleeRangedAttackEntity" weight="6">
					<task class="AttackTargetEntitySDX, SCore" action_index="0"/>
					<consideration class="InWeaponRange, SCore"  action_index="0"  /> 
					<consideration class="CanSeeTarget, SCore"/>
					<consideration class="SelfNotHasBuff, SCore" buffs="buffHitDelay,buffHitStun"/>	
				</action>
			</ai_package>	

			<!-- Human Activities are misc. activities NPCs can do, list will expand in time -->
			<ai_package name="NPCLoot">
                <action name="LootBasic" weight="2" entity_filter="IsSelf" >
                    <task class="Loot, SCore" run="false" TargetType="Loot, SecureLoot" buff="ActivityBuff"/>
                    <consideration class="HasOrder, SCore" order="Loot"/>
                    <consideration class="EnemyNotNear, SCore" distance="20"/>
                </action>
            </ai_package>
			
			<ai_package name="NPCCraft"> <!--  Not hooked up yet  -->
				<action name="Craft Basic" weight="2">
					<task class="MoveToExplore, SCore" run="false" buff="ActivityBuff"/>
					<!-- NPC will wander a chunk area and look for a PathTarget type specified.  If true, move to target and when reached, run the specified ActivityBuff so correct animation plays  -->
					<consideration class="EnemyNotNear, SCore"/>
					<!--Is there an enemy nearby? Loot only when safe, (EnemyNear is the alternative)  -->
					<consideration class="SelfNotHasBuff, SCore" buffs="ActivityCoolDown"/>
					<!-- Don't fire this if the activity cool down buff is set to prevent tasklock.  Could use a different buff to turn off all looting here
					too -->
					<consideration class="HasPath, SCore"/>
					<!-- Checks if the NPC has any Tile Entities in its area of scan. If there's none, it'll scan for some -->
					<consideration class="PathTarget, SCore" type="Campfire, Forge, Workstation"/>
					<!-- filter the task even more by tile entity type. -->
				</action>
			</ai_package>

			<!-- Zombie Base UAI package : Not recommended, use EAI instead.  There are unresolved issues -->
	
			<ai_package name="Zombie Dumb">
				<!--   -->
				<action name="Wander" weight="1">
					<task class="WanderSDX, SCore"/>
					<consideration class="IsNotBusy, SCore"/>
					<consideration class="Random, SCore" percent="0.90"/>
				</action>
				<action name="MoveToWaypoint" weight="2">
					<task class="MoveToTarget" run="false"/>
					<consideration class="TargetType" type="Block"/>
					<consideration class="TargetDistance" flip_y="true" min="2" max="4"/>
					<consideration class="TargetVisible" flip_y="true"/>
				</action>
				<action name="MoveToEnemyAgro" weight="5">
					<task class="MoveToTargetSDX, SCore" run="true"/>
					<consideration class="TargetType" type="EntityPlayer,EntityNPC"/>
					<consideration class="TargetIsEnemy, SCore"/>
					<consideration class="TargetDistance" flip_y="true" min="2" max="30"/>
				</action>
				<action name="MeleeAttackEntity" weight="5">
					<task class="AttackTargetEntity" action_index="0"/>
					<consideration class="TargetType" type="EntityPlayer,EntityNPC"/>
					<consideration class="TargetIsEnemy, SCore"/>
					<consideration class="TargetDistance" flip_y="true" min="0" max="2"/>
				</action>
				<action name="MeleeAttackBlock" weight="3">
					<task class="AttackTargetBlock" action_index="0"/>
					<consideration class="PathBlocked"/>
					<consideration class="TargetType" type="Block"/>
					<consideration class="TargetDistance" flip_y="true" min="0" max="2"/>
				</action>
			</ai_package>
			
			<!-- Animal Base UAI package : Not recommended, use EAI instead.  There are unresolved issues -->
			
			<ai_package name="Animal Aggressive Basic">
				<action name="Wander" weight="1">
					<task class="WanderSDX, SCore"/>
					<consideration class="IsNotBusy, SCore"/>
					<consideration class="Random, SCore" percent="0.90"/>
				</action>
				<action name="MoveToWaypoint" weight="2">
					<task class="MoveToTarget" run="false"/>
					<consideration class="TargetType" type="Block"/>
					<consideration class="TargetDistance" flip_y="true" min="2" max="4"/>
					<consideration class="TargetVisible" flip_y="true"/>
				</action>
				<action name="MoveToEnemyAgro" weight="3">
					<task class="MoveToTargetSDX, SCore" run="true"/>
					<consideration class="TargetType" type="EntityPlayer,EntityNPC"/>
					<consideration class="TargetIsEnemy, SCore"/>
					<consideration class="TargetDistance" flip_y="true" min="2" max="30"/>
				</action>
				<action name="MeleeAttackEntity" weight="5">
					<task class="AttackTargetEntity" action_index="0"/>
					<consideration class="TargetType" type="EntityPlayer,EntityNPC"/>
					<consideration class="TargetIsEnemy, SCore"/>
					<consideration class="TargetDistance" flip_y="true" min="0" max="2"/>
				</action>
				<action name="MeleeAttackBlock" weight="5">
					<task class="AttackTargetBlock" action_index="0"/>
					<consideration class="PathBlocked"/>
					<consideration class="TargetType" type="Block"/>
					<consideration class="TargetDistance" flip_y="true" min="0" max="2"/>
				</action>
			</ai_package>
		</ai_packages>
	</append>
</config>
